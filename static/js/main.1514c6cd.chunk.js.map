{"version":3,"sources":["image/logo.png","components/Header.jsx","servicee/api.js","components/Character.jsx","components/Characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","background","padding","image","width","search","backgroundColor","marginLeft","borderRadius","position","InputBox","color","margin","searchIcon","top","Header","getText","classes","AppBar","className","Toolbar","src","logo","alt","Box","InputBase","placeholder","autoFocus","root","onChange","e","target","value","fetchData","text","a","axios","get","img","height","objectFit","Character","item","console","log","Card","style","Tooltip","title","Typography","name","portrayed","nickname","birthday","occupation","status","arrow","placement","Characters","data","Grid","container","spacing","map","xs","char_id","App","useState","setText","setData","useEffect","result","getData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1514c6cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0294541f.png\";","import { AppBar, Box, makeStyles, Toolbar, InputBase } from '@material-ui/core'\r\nimport logo from '../image/logo.png';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyle = makeStyles({\r\n    header: {\r\n        background: \"#000\",\r\n        padding: '10px'\r\n    },\r\n    image: {\r\n        width: 100,\r\n        \r\n\r\n    },\r\n    search: {\r\n        backgroundColor: 'rgba(46, 46, 41, 1)',\r\n        marginLeft: 400,\r\n        borderRadius: 5,\r\n        position:'relative',\r\n        width:'30%'\r\n        \r\n    },\r\n    InputBox:{\r\n        color:'inherit',\r\n        margin: '0 50px ',\r\n        width:300,\r\n        padding:3\r\n    },\r\n    searchIcon:{\r\n        position:'absolute',\r\n        marginLeft:10,\r\n        padding:0,\r\n        top: 6,\r\n    }\r\n\r\n})\r\n\r\n\r\nconst Header = ({getText}) => {\r\n    const classes = useStyle();\r\n    return (\r\n\r\n        <AppBar className={classes.header} position=\"static\">\r\n            <Toolbar>\r\n                <img className={classes.image} src={logo} alt=\"logo\" />\r\n                <Box  className={classes.search}>\r\n                   <Box className ={classes.searchIcon}>\r\n                       <SearchIcon/>\r\n                   </Box>\r\n                    <InputBase \r\n                    placeholder=\"Search By Name\"\r\n                    autoFocus\r\n                    classes = {{ root: classes.InputBox }} \r\n                    onChange={(e) => getText(e.target.value)}\r\n\r\n                     />\r\n\r\n                    \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport const fetchData = async (text) => {\r\n\r\n  return await axios.get(`https://breakingbadapi.com/api/characters?name=${text}`)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Card , makeStyles, Tooltip, Typography} from '@material-ui/core';\r\n\r\n\r\nconst useStyle =  makeStyles({\r\n    img:{\r\n        \r\n        height:300,\r\n        width:'100%',\r\n        objectFit:'contain',\r\n        \r\n        \r\n    }\r\n})\r\n\r\nconst Character = ({ item }) =>{\r\n\r\n    console.log(item)\r\n    const classes = useStyle();\r\n    return(\r\n        <Card style={{backgroundColor:'rgba(84, 84, 68, 0.1)'}}>\r\n        <Tooltip title={\r\n            <>\r\n            <Typography>Name: {item.name}</Typography>\r\n            <Typography>Real Name: {item.portrayed}</Typography>\r\n            <Typography>Nickname: {item.nickname}</Typography>\r\n             <Typography>Date of Birth: {item.birthday}</Typography>\r\n            <Typography>occupation: {item.occupation}</Typography>\r\n            <Typography>Status: {item.status}</Typography>            \r\n        \r\n            </>\r\n        } arrow placement=\"top\">\r\n            <img src={item.img} className={classes.img} alt = 'Character'/>\r\n            </Tooltip>\r\n        </Card>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Character;","import Character from './Character';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Characters = ({ data }) => {\r\n    return (\r\n        <Box style={{margin:20}}>\r\n        <Grid container spacing={4}>\r\n            {\r\n                data.map(item => (\r\n                    <Grid item xs={3} >\r\n                     <Character key={item.char_id} item={item}  />\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n        </Box>\r\n\r\n    )\r\n\r\n}\r\nexport default Characters;","import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport { Box } from \"@material-ui/core\";\nimport { fetchData } from \"./servicee/api\";\nimport Characters from './components/Characters.jsx'\n\n\nconst App = () => {\n  const [text, setText] = useState(\"\")\n  const [data, setData] = useState([])\n\n\n\n  useEffect(() => {\n\n    const getData = async () => {\n      const result = await fetchData(text)\n\n      setData(result.data)\n\n\n    }\n    getData();\n  }, [text]);\n\n  const getText = (text) => {\n    setText(text);\n    console.log(text)\n  }\n\n  return (\n\n    <Box style={{ backgroundColor: 'black' }} >\n      <Header getText={getText} />\n      <Characters data={data} />\n\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}